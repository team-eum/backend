"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
from . import env

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "6zjo&NN?eG#3n6!Dk7EN9F?cnd@DDJPfztSH#Q8eLy?F$7?aDDEBBKsep@8fR!mBs!ijMFRH9PFH$xpi"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]


# Application definition

DJANGO_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
]

EXTERNAL_APPS = [
    "rest_framework",
    "whitenoise.runserver_nostatic",
    "corsheaders",
]

INTERNAL_APPS = ["main", "user"]

INSTALLED_APPS = INTERNAL_APPS + EXTERNAL_APPS + DJANGO_APPS

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "config.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "config.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "Asia/Seoul"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# Rest Framework Config
REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": (
        "config.authentication.TokenAuthentication",
        "rest_framework.authentication.SessionAuthentication",
    ),
    "DEFAULT_RENDERER_CLASSES": ("rest_framework.renderers.JSONRenderer",),
    "DEFAULT_PERMISSION_CLASSES": ("rest_framework.permissions.IsAuthenticatedOrReadOnly",),
    "DEFAULT_PARSER_CLASSES": ("rest_framework.parsers.JSONParser", "rest_framework.parsers.MultiPartParser",),
    # "DEFAULT_PAGINATION_CLASS": "config.pagination.DefaultPagination",
    "PAGE_SIZE": 10,
    # "EXCEPTION_HANDLER": "config.exceptions.custom_exception_handler",
}


# ENVIRONMENT VARIABLES #
# Social Auth
KAKAO_REST_API_KEY = env.KAKAO_REST_API_KEY
NAVER_CLIENT_ID = env.NAVER_CLIENT_ID
NAVER_CLIENT_SECRET = env.NAVER_CLIENT_SECRET
GOOGLE_CLIENT_ID = env.GOOGLE_CLIENT_ID
GOOGLE_CLIENT_SECRET = env.GOOGLE_CLIENT_SECRET

# Custom Storage
USE_S3 = env.USE_S3
AWS_S3_ACCESS_KEY_ID = env.AWS_S3_ACCESS_KEY_ID
AWS_S3_SECRET_ACCESS_KEY = env.AWS_S3_SECRET_ACCESS_KEY
AWS_STORAGE_BUCKET_NAME = env.AWS_STORAGE_BUCKET_NAME
AWS_QUERYSTRING_EXPIRE = env.AWS_QUERYSTRING_EXPIRE
AWS_S3_REGION_NAME = env.AWS_S3_REGION_NAME
AWS_S3_ENDPOINT_URL = env.AWS_S3_ENDPOINT_URL
AWS_S3_SIGNATURE_VERSION = env.AWS_S3_SIGNATURE_VERSION
AWS_STORAGE_BUCKET_NAME = env.AWS_STORAGE_BUCKET_NAME
AWS_S3_CUSTOM_DOMAIN = env.AWS_S3_CUSTOM_DOMAIN

# Cusom DB
USE_CUSTOM_DB = env.USE_CUSTOM_DB
CUSTOM_DB_ENGINE = env.CUSTOM_DB_ENGINE
CUSTOM_DB_NAME = env.CUSTOM_DB_NAME
CUSTOM_DB_USER = env.CUSTOM_DB_USER
CUSTOM_DB_PASSWORD = env.CUSTOM_DB_PASSWORD
CUSTOM_DB_HOST = env.CUSTOM_DB_HOST
CUSTOM_DB_PORT = env.CUSTOM_DB_PORT
CUSTOM_DB_OPTIONS = env.CUSTOM_DB_OPTIONS

# Additional Configurations #
# Custom Auth Model
AUTH_USER_MODEL = "user.User"

# Custom Storage Configurations
if USE_S3:
    STORAGES = {
        "default": {
            "BACKEND": "storages.backends.s3.S3Storage",
        },
        "staticfiles": {
            "BACKEND": "django.contrib.staticfiles.storage.StaticFilesStorage",
        },

    }

# Static Files Configurations
STATIC_URL = 'static/'
STATIC_ROOT = BASE_DIR / "static"

# Custom DB Configurations
if USE_CUSTOM_DB:
    DATABASES = {
        "default": {
            "ENGINE": CUSTOM_DB_ENGINE,
            "NAME": CUSTOM_DB_NAME,
            "USER": CUSTOM_DB_USER,
            "PASSWORD": CUSTOM_DB_PASSWORD,
            "HOST": CUSTOM_DB_HOST,
            "PORT": CUSTOM_DB_PORT,
            "OPTIONS": CUSTOM_DB_OPTIONS,
        }
    }

# Custom Domain Config (CORS/CSRF)
# CORS Config
CORS_ALLOW_ALL_ORIGINS = True
# CSRF Config
CSRF_TRUSTED_ORIGINS = env.CSRF_TRUSTED_ORIGINS

# AI APIs
OPENAI_API_KEY = env.OPENAI_API_KEY
CLAUDE_API_KEY = env.CLAUDE_API_KEY
